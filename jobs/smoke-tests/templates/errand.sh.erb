#!/bin/bash
set -e -x

REPO=/var/vcap/packages/acceptance-tests/src/github.com/cloudfoundry-incubator/cf-mysql-acceptance-tests

cd ${REPO}

<%
  mysql_service = p('cf_mysql.broker.services').first
  default_max_user_connections = mysql_service['max_user_connections_default'] || 40

  proxy_ips = nil
  if_p('cf_mysql.proxy.proxy_ips') do |ips|
    # proxy_ips may contain nil values due to lack of flexibility in spiff
    proxy_ips = ips.compact
  end.else do
    proxy_ips= link('proxy').instances.map { |instance| instance.address }
  end
%>

cat > integration_config.json <<EOF
{
  "api":           "<%= p('cf.api_url') %>",
  "apps_domain":   "<%= p('cf.app_domains').first %>",
  "admin_user":    "<%= p('cf.admin_username') %>",
  "admin_password":   "<%= p('cf.admin_password') %>",
  "test_password": "<%= p('cf_mysql.smoke_tests.password') %>",
  "broker_host":   "<%= p('cf_mysql.external_host') %>",
  "service_name":  "<%= mysql_service['name'] %>",
  <% if p('cf.smoke_tests.use_existing_org') %>
  "org_name": "<%= p('cf.smoke_tests.org') %>",
  <% end %>
  "plans": [
  <% plans = mysql_service['plans']
  plans.each do |plan| %>
    {
      "plan_name": "<%= plan['name'] %>",
      "private": <%= plan.has_key?('private') ? plan['private'] : false %>,
      "max_storage_mb": <%= plan['max_storage_mb'] %>,
      "max_user_connections": <%= plan['max_user_connections'] || default_max_user_connections %>
    <% if plan != plans.last %>
    },
    <% else %>
    }
    <% end %>
  <% end %>
  ],
  "skip_ssl_validation": <%= p('cf.skip_ssl_validation') %>,
  "proxy": {
    <% urls = proxy_ips.each_with_index.map do |_, index|
      "\"https://proxy-#{index}-#{p('cf_mysql.external_host')}\""
    end %>
    "dashboard_urls": [<%= urls.join(",") %>],
    "api_username": "<%= p('cf_mysql.proxy.api_username') %>",
    "api_password": "<%= p('cf_mysql.proxy.api_password') %>",
    "api_force_https": <%= p('cf_mysql.proxy.api_force_https') %>,
    "skip_ssl_validation": <%= p('cf.skip_ssl_validation') %>
  },
EOF
<% if p('cf_mysql.smoke_tests.standalone_tests_only') %>
cat >> integration_config.json <<EOF
  "standalone": {
    "host":  "<%= p('cf_mysql.host') %>",
    "port": <%= p('cf_mysql.mysql.port') %>,
    "username": "<%= p('cf_mysql.mysql.admin_username') %>",
    "password": "<%= p('cf_mysql.mysql.admin_password') %>"
  },
EOF
<% end %>

cat >> integration_config.json <<EOF
  "timeout_scale": <%= p('cf_mysql.smoke_tests.timeout_scale') %>
}
EOF

export GOPATH=/var/vcap/packages/acceptance-tests
export GOROOT=/var/vcap/packages/golang
export PATH=/var/vcap/packages/cli/bin:$GOPATH/bin:$GOROOT/bin:$PWD/bin:$PATH

export CONFIG=$PWD/integration_config.json

# smoke tests shell out to cf cli
export CF_DIAL_TIMEOUT=30

<% if p('cf_mysql.smoke_tests.standalone_tests_only') %>
  bin/test-standalone --noColor
<% else %>
  bin/test-smoke --noColor
<% end %>
